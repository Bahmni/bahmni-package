plugins {
    id "nebula.ospackage" version "3.4.0"
    id "java"
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'http://mavenrepo.openmrs.org/nexus/content/repositories/public'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories'
    }
}

group 'org.bahmni.emr'
version project.bahmniRelease

task extractOmods(type: Copy) {
    from zipTree(file("${projectDir}/resources/distro-0.92-SNAPSHOT-distro.zip"))
    into file("${buildDir}/distro/")
}

task extractWar(dependsOn: 'downloadMRSWar', type: Copy) {
    from zipTree(file("${buildDir}/resources/main/openmrs.war"))
    into file("${buildDir}/openmrs")
}

task normalizeJarName(type: Copy) {
    from "${buildDir}" + "/libs/"
    into "${buildDir}" + "/libs/"
    include(project.name + '-' + project.bahmniRelease + '.jar')
    rename(project.name + '-' + project.bahmniRelease + '.jar', 'openmrs.jar')
}

ospackage {
    packageName = 'bahmni-emr'
    release = System.getenv('GO_PIPELINE_COUNTER') ?: "1"
    arch = NOARCH
    os = LINUX
    user = 'bahmni'

    into '/opt/openmrs'

    preUninstall file("${projectDir}/scripts/preuninstall.sh")
    preInstall file("${projectDir}/scripts/preinstall.sh")

    from("${buildDir}/libs/openmrs.jar") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'lib/'
    }

    from("${projectDir}/resources/") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'etc'
        exclude('initDB.sh')
    }

    from("${projectDir}/scripts/rpm/") {
        fileMode = 0744
        createDirectoryEntry = true
        into 'bin'
    }

    from("${projectDir}/resources/placeholder") {
        createDirectoryEntry = true
        into 'run'
    }

    from("${projectDir}/resources/placeholder") {
        createDirectoryEntry = true
        into 'log'
    }

    from("${buildDir}/resources/main/openmrs.war") {
        fileMode = 0644
        createDirectoryEntry = true
        into '.'
    }

    from("${projectDir}/resources/placeholder") {
        createDirectoryEntry = true
        into 'openmrs'
    }

    from("${projectDir}/resources/initDB.sh") {
        fileMode = 0744
        createDirectoryEntry = true
        into 'openmrs/scripts'
    }

    from("${projectDir}/resources/openmrs_demo_dump.sql") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'openmrs/scripts'
    }

    from("${projectDir}/resources/openmrs_clean_dump.sql") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'openmrs/scripts'
    }

    from("${buildDir}/distro/distro-0.91-SNAPSHOT") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'modules'
        include('addresshierarchy-*.omod')
        include('appframework-*.omod')
        include('bahmnicore-*.omod')
        include('bedmanagement-*.omod')
        include('calculation-*.omod')
        include('emrapi-*.omod')
        include('event-*.omod')
        include('owa-*.omod')
        include('htmlwidgets-*.omod')
        include('idgen-*.omod')
        include('idgen-webservices-*.omod')
        include('metadatamapping-*.omod')
        include('metadatasharing-*.omod')
        include('openmrs-atomfeed-*.omod')
        include('providermanagement-*.omod')
        include('reference-data-*.omod')
        include('reporting-*.omod')
        include('serialization.xstream-*.omod')
        include('uicommons-*.omod')
        include('uiframework-*.omod')
        include('uilibrary-*.omod')
        include('webservices.rest-*.omod')
        include('bacteriology-*.omod')
        include('rulesengine-*.omod')
        include('episodes-*.omod')
        include('legacyui-*.omod')
        include('reportingcompatibility-*.omod')
        include('bahmni.ie.apps-*.omod')
        include('auditlog-*.omod')
        include('appointments-*.omod')
        include('reportingrest-*.omod')
        include('operationtheater-*.omod')
    }

    from("${projectDir}/resources/") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'etc'
        include('bahmni-emr.conf')
    }

    from("${projectDir}/resources/") {
        fileMode = 0744
        into 'etc'
        include('run-liquibase.sh')
    }

    from("${projectDir}/resources/"){
        fileMode = 0644
        into '.'
        include('bahmnicore.properties')
    }

    from("${projectDir}/resources/") {
        fileMode = 0755
        into 'etc'
        include('blank-user.png')
    }

    from("${projectDir}/resources/") {
        fileMode = 0755
        into 'etc'
        include('emr_ssl.conf')
    }
}

buildRpm {
    dependsOn 'build', 'normalizeJarName', 'downloadMRSWar', 'extractOmods'
    requires('unzip')
    requires('mysql-community-client', "5.7", GREATER | EQUAL)
    
    postInstall file("${projectDir}/scripts/postinstall.sh")
}

task downloadMRSWar {
    onlyIf { !(new File("${buildDir}/resources/main/openmrs.war").exists()) }

    doLast {
        new File("${buildDir}/resources/main").mkdirs();
        configurations.mrsWar.resolve().each { file ->
            if (file.getName().contains("openmrs")) {
                file.renameTo(new File("${buildDir}/resources/main/openmrs.war"))
            }
        }
    }
}

configurations {
    mrsWar
}

dependencies {
    compile project(":core")
    mrsWar "org.openmrs.web:openmrs-webapp:${openmrsVersion}@war"
}

jar {
    manifest {
        attributes 'Main-Class': "org.bahmni.deployment.launch.Main"
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
