plugins {
    id 'nebula.ospackage' version '3.4.0'
    id "java"
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'http://mavenrepo.openmrs.org/nexus/content/repositories/public'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories'
    }
}

group 'org.bahmni.openmrs'
version project.bahmniRelease


task extractWar(dependsOn: 'downloadMRSWar', type: Copy) {
    from zipTree(file("${buildDir}/resources/main/openmrs.war"))
    into file("${buildDir}/openmrs")
}

task normalizeJarName(type: Copy) {
    from "${buildDir}" + "/libs/"
    into "${buildDir}" + "/libs/"
    include(project.name + '-' + project.bahmniRelease + '.jar')
    rename(project.name + '-' + project.bahmniRelease + '.jar', 'openmrs.jar')
}

//644 for all files other than executables
//744 for all files which are executables
//755 for all folders

ospackage {
    packageName = 'bahmni-openmrs'
    release = System.getenv('GO_PIPELINE_COUNTER') ?: "1"
    arch = NOARCH
    os = LINUX
    user = 'root'

    into '/opt/openmrs'

    preInstall file("${projectDir}/scripts/preinstall.sh")
    postInstall file("${projectDir}/scripts/postinstall.sh")
    preUninstall file("${projectDir}/scripts/preuninstall.sh")

    from("${buildDir}/libs/openmrs.jar") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'lib/'
    }

    from("${projectDir}/resources/") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'etc'
        exclude('initDB.sh')
    }

    from("${projectDir}/scripts/rpm/") {
        fileMode = 0744
        createDirectoryEntry = true
        into 'bin'
    }

    from("${projectDir}/resources/placeholder") {
        createDirectoryEntry = true
        into 'run'
    }

    from("${projectDir}/resources/placeholder") {
        createDirectoryEntry = true
        into 'log'
    }

    from("${buildDir}/resources/main/openmrs.war") {
        fileMode = 0644
        createDirectoryEntry = true
        into '.'
    }

    from("${projectDir}/resources/placeholder") {
        createDirectoryEntry = true
        into 'openmrs'
    }

    from("${projectDir}/resources/initDB.sh") {
        fileMode = 0744
        createDirectoryEntry = true
        into 'openmrs/scripts'
    }

    from("${projectDir}/resources/openmrs_demo_dump.sql") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'openmrs/scripts'
    }

    from("${projectDir}/resources/openmrs_clean_dump.sql") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'openmrs/scripts'
    }
}

buildRpm {
    dependsOn 'build', 'normalizeJarName', 'downloadMRSWar'
    requires('unzip')
    requires('mysql-community-client', "5.7", GREATER | EQUAL)
}

task downloadMRSWar {
    onlyIf { !(new File("${buildDir}/resources/main/openmrs.war").exists()) }

    doLast {
        new File("${buildDir}/resources/main").mkdirs();
        configurations.mrsWar.resolve().each { file ->
            if (file.getName().contains("openmrs")) {
                file.renameTo(new File("${buildDir}/resources/main/openmrs.war"))
            }
        }
    }
}

configurations {
    mrsWar
}


dependencies {
    compile project(":core")
    mrsWar "org.openmrs.web:openmrs-webapp:${openmrsVersion}@war"
}

jar {
    manifest {
        attributes 'Main-Class': "org.bahmni.deployment.launch.Main"
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
